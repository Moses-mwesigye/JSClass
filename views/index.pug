//- PUG TEMPLATE VERSION
doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title Signup
    link(rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css")
    style.
      body {
        background: linear-gradient(135deg, #6f42c1 0%, #b983ff 100%);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .card {
        background: rgba(30, 20, 60, 0.85);
        color: #fff;
        border: none;
        box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
      }
      .form-label {
        color: #b3e0ff;
      }
      .form-control, .form-select {
        background: rgba(30,30,40,0.7);
        color: #fff;
        border-radius: 0;
        border: 1px solid #444;
      }
      .btn-primary {
        background: rgba(111,66,193,0.85);
        border: none;
        box-shadow: 0 2px 8px #0005;
      }
  body
    .container
      .row.justify-content-center
        .col-md-6.col-lg-5
          .card.p-4
            h2.mb-4.text-center(style="color:#e0ffb3;") Y4C Sign Up
            form#signupForm(autocomplete="off" method="POST" action="/users")
              .mb-3
                label.form-label(for="role") Role
                select.form-select(id="role" name="role" required)
                  option(value="" disabled selected) Select role
                  option(value="manager" id="managerOption") Manager
                  option(value="salesrep") Sales Representative
                  option(value="customer") Customer
              script.
                // Disable manager option if 2 managers already exist
                window.addEventListener('DOMContentLoaded', async function() {
                  try {
                    const res = await fetch('/api/users/count?role=manager');
                    if (res.ok) {
                      const data = await res.json();
                      if (data.count >= 2) {
                        const managerOpt = document.getElementById('managerOption');
                        managerOpt.disabled = true;
                        managerOpt.textContent += ' (limit reached)';
                      }
                    }
                  } catch (e) {}
                });
              .mb-3
                label.form-label(for="username") Username
                input.form-control(type="text" id="username" name="username" required autocomplete="off")
              .mb-3
                label.form-label(for="age") Age
                input.form-control(type="number" id="age" name="Age" min="18" max="30" required placeholder="Enter your age")
              .mb-3
                label.form-label(for="password") Password
                input.form-control(type="password" id="password" name="password" required autocomplete="new-password")
              .mb-3
                label.form-label(for="confirmPassword") Confirm Password
                input.form-control(type="password" id="confirmPassword" name="confirmPassword" required autocomplete="new-password")
              button.btn.btn-primary.w-100(type="submit") Sign Up
              #signupMsg.mt-3.text-center
    // Form now submits directly to /users, validation handled server-side
