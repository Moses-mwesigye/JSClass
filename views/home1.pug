
//- PUG TEMPLATE VERSION
doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title Young4Chicks - Sales Dashboard
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css")
    link(rel="stylesheet" href="/young-for-chicks/css/bootstrap-5.3.6/css/bootstrap.css")
    link(rel="stylesheet" href="css/bootstrap-5.3.6-dist/css/bootstrap.css")
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet")
    style.
      .hexagon {
        position: relative;
        width: 110px;
        height: 60px;
        background: rgba(24, 49, 53, 0.15);
        margin: 10px auto;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 2px solid #17a2b8;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        clip-path: polygon(
          25% 5%, 75% 5%,
          100% 50%,
          75% 95%, 25% 95%,
          0% 50%
        );
        transition: transform 0.2s;
      }
      .hexagon:hover {
        transform: scale(1.07);
        box-shadow: 0 4px 16px rgba(0,255,255,0.15);
      }
      .hex-content {
        text-align: center;
        color: #fff;
        width: 100%;
      }
      .hex-content i {
        display: block;
        margin-bottom: 2px;
        font-size: 1.3rem;
      }
      .hex-content div {
        font-size: 0.95rem;
        font-weight: 500;
      }
      /* Zigzag pattern */
      .zigzag-row {
        display: flex;
        justify-content: space-between;
        flex-wrap: nowrap;
        width: 100%;
        margin: 0;
        padding: 0 2vw;
      }
      .zigzag-row .zigzag-col {
        flex: 1 1 0;
        display: flex;
        justify-content: center;
        margin-bottom: -18px; /* overlap hexagons vertically */
      }
      .zigzag-row.even {
        margin-left: 6vw;
      }
      @media (max-width: 991px) {
        .zigzag-row {
          flex-wrap: wrap;
          justify-content: center;
          padding: 0;
        }
        .zigzag-row.even {
          margin-left: 0;
        }
      }
      @media (max-width: 767px) {
        .zigzag-row, .zigzag-row.even {
          flex-wrap: wrap;
          margin-left: 0 !important;
          margin-bottom: 0;
          padding: 0;
        }
        .zigzag-row .zigzag-col {
          margin-bottom: 0;
        }
        .hexagon {
          width: 90px;
          height: 48px;
        }
      }
      .zigzag-menu-fixed {
        position: sticky;
        top: 0;
        z-index: 1050;
        background: black;
        padding-top: 10px;
        padding-bottom: 10px;
      }
  body(style="background-color: darkblue;")
    // Zigzag Hexagon Navigation (fixed at the top)
    .zigzag-menu-fixed
      .w-100.my-4
      .zigzag-row.odd
        .zigzag-col
          a.text-decoration-none(href="/dashboard")
            .hexagon
              .hex-content
                i.fa.fa-home(style="color: rgb(0, 255, 255);")
                div(style="color: rgb(0, 255, 255);") HOME
        .zigzag-col
          a.text-decoration-none(href="/feeds")
            .hexagon
              .hex-content
                i.fa.fa-cutlery(style="color: magenta;")
                div(style="color: magenta;") FEEDS
        .zigzag-col
          a.text-decoration-none(href="/custreg")
            .hexagon
              .hex-content
                i.fa.fa-users(style="color: chartreuse;")
                div(style="color: chartreuse;") FARMERS
        .zigzag-col
          a.text-decoration-none(href="/paymentslist")
            .hexagon
              .hex-content
                i.fa.fa-credit-card(style="color: orange;")
                div(style="color: orange;") PAYMENTS
      .zigzag-row.even
        .zigzag-col
          a.text-decoration-none(href="/requests")
            .hexagon
              .hex-content
                i.fa.fa-list(style="color:cyan;font-size:0.95rem;")
                div(style="color: rgb(159, 255, 49);") REQUESTS
        .zigzag-c
          a.text-decoration-none(href="/userslist")
            .hexagon
              .hex-content
                i.fa.fa-users(style="color: crimson;")
                div(style="color: crimson;") USERS
        .zigzag-col
          a.text-decoration-none(href="/")
            .hexagon
              .hex-content
                i.fa.fa-sign-out-alt(style="color: #0d6efd;")
                div(style="color: #0d6efd;") LOGOUT
    script(src="css/bootstrap-5.3.6/js/bootstrap.bundle.js")
    script(src="/young-for-chicks/js/include.js")
    h4(style="color: aqua;") NOTE: Register Farmer Before Placing Any Request OR they send Id to sales@y4c.com then send them the customer page link
    //- Admin table and add form removed as requested
    .container.mt-4
      .row
        .col-12
          .card.border-info(style="background-color: rgba(24, 49, 53, 0.068);")
            .card-header.d-flex.justify-content-between.align-items-center
              h4(style="color: aqua;") Chicken Requests
              button.btn.btn-success.btn-sm(type="button" onclick="showAddForm()")
                i.fa.fa-plus
                |  Add
            .card-body
              // Add Form (hidden by default)
              form#addRequestForm.mb-3(style="display:none;")
                .row.g-2
                  .col-md-3
                    input#addDate.form-control(type="date" required)
                  .col-md-2
                    input#addChicks.form-control(type="number" placeholder="Total Chicks" min="1" required)
                  .col-md-3
                    input#addFarmer.form-control(type="text" placeholder="Farmer" required)
                  .col-md-2
                    button.btn.btn-primary.btn-sm(type="submit") Save
                    button.btn.btn-secondary.btn-sm(type="button" onclick="hideAddForm()") Cancel
              table.table.table-striped
                thead
                  tr
                    th Date Submitted
                    th Total Chicks
                    th Farmer
                    th Total Price
                    th Approved
                    th Actions
                tbody#requestsTableBody
                  // Filled by JS
    .container-fluid
      .row
        // Chicks
        .col-md-4
          .card.border-warning(style="background-color: rgba(24, 49, 53, 0.068);")
            .card-header
              h4(style="color: aqua;") Total Chicks
            .card-body
              h5(style="color: chartreuse;")
                span#totalChicksCount 0
        // Users
        .col-md-4
          .card.border-info(style="background-color: rgba(0, 0, 0, 0);")
            .card-header
              h4(style="color: aqua;") Total Users
            .card-body
              h5(style="color: chartreuse;")
                span#totalUsersCount 0
        // Requests
        .col-md-4
          .card.border-warning(style="background-color: rgba(24, 49, 53, 0.068);")
            .card-header
              h4(style="color: aqua;") Total Requests
            .card-body
              h5(style="color: chartreuse;")
                span#totalRequestsCount 0
    script.
      // Fetch and display admin requests from the backend
      async function fetchRequests() {
          try {
              const res = await fetch('/admin/requests');
              if (!res.ok) throw new Error('Failed to fetch requests');
              return await res.json();
          } catch (err) {
              alert('Error loading requests: ' + err.message);
              return [];
          }
      }

      async function loadRequests() {
          const requests = await fetchRequests();
          const tbody = document.getElementById('requestsTableBody');
          tbody.innerHTML = '';
          requests.forEach((r, i) => {
              let totalPrice = (parseInt(r.chicks) || 0) * 1650;
              let checked = r.approved ? 'checked' : '';
              tbody.innerHTML += `
                  <tr id="requestRow${r._id}">
                      <td><span class="request-date">${r.date}</span></td>
                      <td><span class="request-chicks">${r.chicks}</span></td>
                      <td><span class="request-farmer">${r.farmer}</span></td>
                      <td><span class="request-price">${totalPrice}</span></td>
                      <td>
                          <input type="checkbox" ${checked} disabled title="Can only be approved by admin">
                      </td>
                      <td>
                          <button class="btn btn-primary btn-sm" onclick="alert('Consult Admin')">Edit</button>
                          <button class="btn btn-danger btn-sm" onclick="alert('Consult Admin')">Delete</button>
                      </td>
                  </tr>
              `;
          });
          updateStats(requests);
      }
      function showAddForm() {
          document.getElementById('addRequestForm').style.display = '';
      }
      function hideAddForm() {
          document.getElementById('addRequestForm').reset();
          document.getElementById('addRequestForm').style.display = 'none';
      }

      document.getElementById('addRequestForm').onsubmit = async function(e) {
          e.preventDefault();
          let date = document.getElementById('addDate').value;
          let chicks = document.getElementById('addChicks').value;
          let farmer = document.getElementById('addFarmer').value.trim();
          if (!date || !chicks || !farmer) return alert('All fields required');
          try {
              const res = await fetch('/admin/requests', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ date, chicks, farmer, agent: '', approved: false })
              });
              if (!res.ok) throw new Error('Failed to add request');
              loadRequests();
              hideAddForm();
          } catch (err) {
              alert('Error adding request: ' + err.message);
          }
      };


      // Edit and delete are disabled for dashboard; show alert instead

      async function toggleApproved(id, isChecked) {
          try {
              const res = await fetch(`/admin/requests/${id}`, {
                  method: 'PUT',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ approved: isChecked })
              });
              if (!res.ok) throw new Error('Failed to update approval');
              loadRequests();
          } catch (err) {
              alert('Error updating approval: ' + err.message);
          }
      }

      // Update stats: total chicks, total users, total requests (sum of total price)
      function updateStats(requests) {
          // Total chicks
          let totalChicks = requests.reduce((sum, r) => sum + (parseInt(r.chicks) || 0), 0);
          const totalChicksEl = document.getElementById('totalChicksCount');
          if (totalChicksEl) totalChicksEl.textContent = totalChicks;
          // Total users (unique farmers)
          let farmers = requests.map(r => r.farmer && r.farmer.trim()).filter(Boolean);
          let uniqueFarmers = [...new Set(farmers)];
          const totalUsersEl = document.getElementById('totalUsersCount');
          if (totalUsersEl) totalUsersEl.textContent = uniqueFarmers.length;
          // Total requests (sum of total price)
          let totalPriceSum = requests.reduce((sum, r) => sum + ((parseInt(r.chicks) || 0) * 1650), 0);
          const totalRequestsEl = document.getElementById('totalRequestsCount');
          if (totalRequestsEl) totalRequestsEl.textContent = totalPriceSum;
      }

      // Initial load
      window.onload = function() {
          loadRequests();
      };
    script(src="css/bootstrap-5.3.6-dist/js/bootstrap.bundle.js")